let mapleader = "\<Space>"
set idearefactormode=keep
set ideajoin


" SEARCHING
" searching in file
map <leader>/ :action Find<CR>
" search everywhere
map <leader>f :action SearchEverywhere<CR>



" CODE EXECUTION
" running code (selected file)
map <leader>e :action Run<CR>


" reference trigger
map <leader>; :action GotoDeclaration<CR>


" indenting and formatting
map <leader>i :action ReformatCode<CR>
map <leader>o :action OptimizeImports<CR>



" VISUAL MODE KEY BINDINGS
vmap < :action EditorUnindentSelection<CR>
vmap > :action EditorIndentSelection<CR>
map <leader>c :action CommentByLineComment<CR>
map <leader>y "+y<CR>
map <leader>p "+p<CR>



" OPEN WINDOWS
" switch between open panes
map <leader>h <C-W>h
map <leader>j <C-W>j
map <leader>k <C-W>k
map <leader>l <C-W>l

" saving, quitting, and exiting
map <leader>w :action SaveAll<CR>
map <leader>q :action CloseContent<CR>
map <leader>x :action Exit<CR>

" navigate between files
map <S-h> :action PreviousTab<CR>
map <S-l> :action NextTab<CR>

" splitting windows
map <leader>v :action SplitVertically<CR>
map <leader>s :action SplitHorizontally<CR>

" toggle full screen
map <leader>t :action ToggleFullScreen<CR>

" closing editors
map <leader>a :action CloseAllEditors<CR>



" EXTENSIONS
set surround

" NERDTree setup
set NERDTree
" map <leader>ne :NERDTree<CR>
map <leader>nf :NERDTreeFocus<CR>
map <leader>nt :NERDTreeToggle<CR>
map <leader>nf :NERDTreeFind<CR>



" REFACTORING TOOLS
" changing function signature
map <leader>ms :action ChangeSignature<CR>

" changes view rename
map <leader>mr :action ChangesView.Rename<CR>

" inspect current file
map <leader>mi :action CodeInspection.OnEditor<CR>

" collapse block
map <leader>mc :action CollapseBlock<CR>

" collapse selection
map <leader>mo :action CollapseSelection<CR>

" extract method or function
map <leader>mm :action ExtractMethod<CR>
map <leader>mf :action ExtractFunction<CR>

" find word at caret
map <leader>mw :action FindWordAtCaret<CR>



" TOGGLING WINDOWS
" bookmarks
map <leader>b :action ActivateBookmarksToolWindow<CR>

" coverage tool window
map <leader>nc :action ActivateCoverageToolWindow<CR>

" ai assistant window
map <leader>na :action ActivateAIAssistantToolWindow<CR>

" debug window
map <leader>nd :action ActivateDebugToolWindow<CR>

" git info (commit tool window)
map <leader>gc :action ActivateCommitToolWindow<CR>

" file tree
map <leader>ne :action ActivateProjectToolWindow<CR>

" database tool window
map <leader>gd :action ActivateDatabaseToolWindow<CR>

" database changes tool window
map <leader>rd :action ActivateDatabaseChangesToolWindow<CR>

" find tool window
map <leader>nf :action ActivateFindToolWindow<CR>

" gradle tool window
map <leader>gg :action ActivateGradleToolWindow<CR>

" notifications tool window
map <leader>gn :action ActivateNotificationsToolWindow<CR>

" problems tool window
map <leader>gp :action ActivateProblemsViewToolWindow<CR>

" profiler tool window
map <leader>gr :action ActivateProfilerToolWindow<CR>

" pull request tool window
map <leader>np :action ActivatePullRequestToolWindow<CR>

" run tool window
map <leader>nr :action ActivateRunToolWindow<CR>

" services tool window
map <leader>gs :action ActivateServicesToolWindow<CR>

" structure tool window
map <leader>ns :action ActivateStructureToolWindow<CR>

" terminal tool window
map <leader>mt :action ActivateTerminalToolWindow<CR>

" version control tool window
map <leader>gv :action ActivateVersionControlToolWindow<CR>



" DEBUGGING
" add breakpoint
map <leader>mb :action AddBreakpoint<CR>

" run in debug mode
map <leader>md :action Debug<CR>



" ANDROID SPECIFIC



" FRONTEND SPECIFIC



" arrangement rule
map <leader>mv :action Arrangement.Alias.Rule.Edit<CR>

" emoji picker
map <leader>me :action EmojiPicker.Open<CR>



" OOP
" generate constructor
map <leader>mg :action GenerateConstructor<CR>

" generate entity listener methods
map <leader>ml :action GenerateEntityListenerMethods<CR>

" generate getter and setter
map <leader>mz :action GenerateGetterAndSetter<CR>

" generate javadoc
map <leader>mj :action GenerateJavadoc<CR>



" TESTING


" PLUGINS
" vim commentary
Plug "tpope/vim-commentary"